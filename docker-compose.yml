version: '3.8'

services:
  # Application service
  app:
    build:
      context: ./backend
      target: development
    container_name: express-ts-app-dev
    ports:
      - '3000:3000'
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/express-ts-dev
      - JWT_SECRET=dev-jwt-secret-key-change-in-production
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB service
  mongodb:
    image: mongo:7.0
    container_name: express-ts-mongodb
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=express-ts-dev
    networks:
      - app-network
    restart: unless-stopped

  # Redis service for caching/sessions
  redis:
    image: redis:7-alpine
    container_name: express-ts-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB Admin UI
  mongo-express:
    image: mongo-express:1.0.2-18
    container_name: express-ts-mongo-express
    ports:
      - '8081:8081'
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: unless-stopped

  # Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: express-ts-redis-commander
    ports:
      - '8082:8081'
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
